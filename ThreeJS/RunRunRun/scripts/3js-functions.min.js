function createScene(e=defaultScene){var o=new THREE.Scene;o.background=new THREE.Color(e.color),o.fog=new THREE.Fog(e.fog,e.near,e.far);var t=new THREE.WebGLRenderer,i=document.getElementById(e.id);t.setSize(i.clientWidth,i.clientHeight),t.shadowMap.enabled=!0,t.shadowMap.type=THREE.PCFSoftShadowMap,i.appendChild(t.domElement);var r=new ResizeObserver(e=>{e.forEach(e=>{t.setSize(e.contentRect.width,e.contentRect.height)})});return r.observe(i),{scene:o,renderer:t}}function createCamera(e=defaultCamera){const o={perspective:THREE.PerspectiveCamera,orthographic:THREE.OrthographicCamera,stereo:THREE.StereoCamera};var t,i=document.getElementById(e.id),r=i.clientWidth,n=i.clientHeight;if(o[e.type]){"perspective"===e.type?t=new o[e.type](e.properties.fov,r/n,e.properties.near,e.properties.far):"orthographic"===e.type?t=new o[e.type](r/-2,r/2,n/2,n/-2,e.properties.near,e.properties.far):"stereo"===e.type&&(t=new o[e.type],t.update(e.properties)),t.position.set(e.position.x,e.position.y,e.position.z),e.target&&t.lookAt(new THREE.Vector3(e.target.x,e.target.y,e.target.z));var a=new ResizeObserver(o=>{o.forEach(o=>{r=i.clientWidth,n=i.clientHeight,"perspective"===e.type?t.aspect=r/n:"orthographic"===e.type?(t.left=r/-2,t.right=r/2,t.top=n/2,t.bottom=n/-2):"stereo"===e.type&&(t.aspect=r/n),t.updateProjectionMatrix(),renderer.setSize(o.contentRect.width,o.contentRect.height)})});return a.observe(i),t}console.error("Invalid camera type: "+e.type)}function addLight(e=defaultLight){const o={directional:THREE.DirectionalLight,point:THREE.PointLight,spot:THREE.SpotLight,ambient:THREE.AmbientLight,hemisphere:THREE.HemisphereLight,rectarea:THREE.RectAreaLight},t=o[e.type];if(!t)return void console.error(`Error: Unsupported light type "${e.type}"`);let i;if(i="hemisphere"===e.type?new t(e.color.sky,e.color.ground,e.intensity):new t(e.color,e.intensity),["ambient","hemisphere","rectarea"].includes(e.type)||(i.position.set(e.position.x,e.position.y,e.position.z),i.castShadow=e.shadow),!["directional","spot"].includes(e.type)||(i.target.position.set(e.target.x,e.target.y,e.target.z),i.target))return e.scene.add(i),e.shadow&&(i.shadow.mapSize.width=e.mapSize,i.shadow.mapSize.height=e.mapSize,i.shadow.camera.near=e.near,i.shadow.camera.far=e.far),e.guide&&e.scene.add(new THREE.CameraHelper(i)),i;console.error(`Error: Cannot add camera helper for non-targeted light "${e.type}"`)}function setPhysics(e=defaultPhysics){var o=new CANNON.World;o.gravity.set(e.gravity.x,e.gravity.y,e.gravity.z);e.time;var t=new CANNON.Body({mass:0,shape:new CANNON.Plane,position:new CANNON.Vec3(0,0,0)});return t.quaternion.setFromAxisAngle(new CANNON.Vec3(1,0,0),-Math.PI/2),o.addBody(t),o}function createPrimitive(e=defaultPrimitive){if(e.shape){var o={box:THREE.BoxGeometry,sphere:THREE.SphereGeometry,plane:THREE.PlaneGeometry,cylinder:THREE.CylinderGeometry,cone:THREE.ConeGeometry,torus:THREE.TorusGeometry};if(!o[e.shape])return void console.error(`Error: ${e.shape} is not a supported primitive type`);var t,i={width:e.size.width||10,height:e.size.height||10,depth:e.size.depth||10,radius:e.size.radius||100,segments:e.size.segments||10,tubeRadius:e.size.tubeRadius||1};"plane"===e.shape?t=new o[e.shape](i.width,i.height):"sphere"===e.shape?t=new o[e.shape](i.radius,i.width,i.height):"box"===e.shape?t=new o[e.shape](i.depth,i.width,i.height):"cylinder"===e.shape?t=new o[e.shape](i.radius,i.radius,i.height,i.segments):"cone"===e.shape?t=new o[e.shape](i.radius,i.height,i.segments):"torus"===e.shape&&(t=new o[e.shape](i.radius,i.tubeRadius,i.segments,i.segments));var r={color:e.color||16711680,opacity:void 0!==e.opacity?e.opacity:1,wireframe:e.wireframe||!1,transparent:e.transparent||!1};e.doubleSided&&(r.map=(new THREE.TextureLoader).load(e.doubleSided)),e.texture&&(r.map=(new THREE.TextureLoader).load(e.texture));var n=new THREE.MeshLambertMaterial(r),a=new THREE.Mesh(t,n);if(e.guide){var s=new THREE.BoxHelper(a,e.color);a.add(s)}if(e.position&&void 0!==e.position.x&&void 0!==e.position.y&&void 0!==e.position.z?a.position.set(e.position.x,e.position.y,e.position.z):a.position.set(0,0,0),e.rotation&&void 0!==e.rotation.x&&void 0!==e.rotation.y&&void 0!==e.rotation.z?a.rotation.set(e.rotation.x,e.rotation.y,e.rotation.z):a.rotation.set(0,0,0),e.scale&&void 0!==e.scale.x&&void 0!==e.scale.y&&void 0!==e.scale.z?a.scale.set(e.scale.x,e.scale.y,e.scale.z):a.scale.set(1,1,1),a.castShadow=void 0===e.shadow||e.shadow,a.receiveShadow=void 0===e.receive||e.receive,a.visible=void 0===e.visible||e.visible,e.scene.add(a),e.physics){var d,p={box:[i.width/2,i.height/2,i.depth/2],sphere:[i.radius,i.width,i.height],plane:[i.width,0,i.height],cylinder:[i.radius,i.height/2,0],cone:[i.radius,i.height/2,0],torus:[i.radius+i.tubeRadius,0,0]},c=new CANNON.Vec3(p[e.shape][0],p[e.shape][2],p[e.shape][1]);"box"==e.shape?d=new CANNON.Box(c):"sphere"==e.shape?d=new CANNON.Sphere(c):"plane"==e.shape?d=new CANNON.Plane(c):"cylinder"==e.shape?d=new CANNON.Cylinder(c):"cone"==e.shape?d=new CANNON.Cone(c):"torus"==e.shape&&(d=new CANNON.Trimesh(c));var y=new CANNON.Body({mass:e.physics.mass||1,shape:d,position:new CANNON.Vec3(a.position.x,a.position.y,a.position.z),linearVelocity:new CANNON.Vec3,angularVelocity:new CANNON.Vec3,friction:e.physics.friction||.3,restitution:e.physics.restitution||0,type:e.physics.static?CANNON.Body.STATIC:CANNON.Body.DYNAMIC});e.physics.impulse&&y.applyImpulse(new CANNON.Vec3(e.physics.impulse.x||0,e.physics.impulse.y||0,e.physics.impulse.z||0),new CANNON.Vec3),e.physics.force&&y.applyForce(new CANNON.Vec3(e.physics.force.x||0,e.physics.force.y||0,e.physics.force.z||0),new CANNON.Vec3),e.physics.world.addBody(y)}return e.physics?{model:a,body:y}:{model:a}}console.error("Error: Cannot create primitive because type is not set")}function createModel(e=defaultModel){return e.path?new Promise((o,t)=>{var i=new THREE.GLTFLoader;i.load(e.path,function(t){var i=t.scene;if(e.position&&void 0!==e.position.x&&void 0!==e.position.y&&void 0!==e.position.z?i.position.set(e.position.x,e.position.y,e.position.z):i.position.set(0,0,0),e.rotation&&void 0!==e.rotation.x&&void 0!==e.rotation.y&&void 0!==e.rotation.z?i.rotation.set(e.rotation.x,e.rotation.y,e.rotation.z):i.rotation.set(0,0,0),e.scale&&void 0!==e.scale.x&&void 0!==e.scale.y&&void 0!==e.scale.z?i.scale.set(e.scale.x,e.scale.y,e.scale.z):i.scale.set(1,1,1),t.scene.traverse(function(o){o.isMesh&&1==e.shadow!==void 0&&(o.castShadow=!0)}),e.scene.add(i),e.guide){var r=new THREE.BoxHelper(i,e.color);i.add(r)}if(e.physics){var n,a=(new THREE.Box3).setFromObject(i),s=a.getSize(new THREE.Vector3),d=new CANNON.Box(new CANNON.Vec3(.5*s.x,.5*s.y,.5*s.z));n=new CANNON.Body({mass:e.physics.mass||1,shape:d,position:new CANNON.Vec3(i.position.x,i.position.y,i.position.z),linearVelocity:new CANNON.Vec3,angularVelocity:new CANNON.Vec3,friction:e.physics.friction||.3,restitution:e.physics.restitution||0,type:e.physics.static?CANNON.Body.STATIC:CANNON.Body.DYNAMIC}),n.addShape(d),e.physics.impulse&&n.applyImpulse(new CANNON.Vec3(e.physics.impulse.x||0,e.physics.impulse.y||0,e.physics.impulse.z||0),new CANNON.Vec3),e.physics.force&&n.applyForce(new CANNON.Vec3(e.physics.force.x||0,e.physics.force.y||0,e.physics.force.z||0),new CANNON.Vec3),e.physics.world.addBody(n)}e.physics?o({model:i,body:n}):o({model:i})})}):void console.error("Error: Cannot create model because model path is not set")}function loadModel(e,o,t,i,r,n,a,s,d){return new Promise((p,c)=>{var y,h,l=new THREE.GLTFLoader;l.load(o,function(o){y=o.scene,y.position.set(i.x,i.y,i.z),y.rotation.set(r.x,r.y,r.z),y.scale.set(t.w,t.h,t.d),o.scene.traverse(function(e){e.isMesh&&(e.castShadow=a,s&&(e.receiveShadow=s))}),e.add(y);var c=(new THREE.Box3).setFromObject(y),l=c.getSize(new THREE.Vector3),u=new CANNON.Box(new CANNON.Vec3(.5*l.x,.5*l.y,.5*l.z));if(h=new CANNON.Body({mass:n,shape:u,position:new CANNON.Vec3(y.position.x,y.position.y,y.position.z)}),world.addBody(h),d){const e=new THREE.BoxHelper(y,16776960);y.add(e)}p({model:y,body:h})})})}function createBall(e,o,t,i,r,n,a,s,d){var p=new THREE.SphereGeometry(t.r,t.w,t.h),c=new THREE.MeshLambertMaterial({color:o}),y=new THREE.Mesh(p,c);if(y.position.set(i.x,i.y,i.z),y.rotation.set(r.x,r.y,r.z),y.castShadow=a,y.receiveShadow=s,e.add(y),d){const e=new THREE.BoxHelper(y,16776960);y.add(e)}var h=new CANNON.Body({mass:n,shape:new CANNON.Sphere(t.r),position:new CANNON.Vec3(y.position.x,y.position.y,y.position.z)});return world.addBody(h),{model:y,body:h}}function updateControls(e,o,t,i){var r=(o-t)/1e3,n={x:0,y:0,z:0},a=0;i.model.position,i.model.rotation,i.body.position,i.body.rotation;e.direction.x=Number(movement.right)-Number(movement.left),e.direction.y=Number(movement.up)-Number(movement.down),e.direction.z=Number(movement.forward)-Number(movement.backward),0!=e.direction.x||(e.direction.y,e.direction.z),e.velocity.z-=e.velocity.z*r,e.velocity.x-=e.velocity.x*r,e.velocity.y-=e.velocity.y*r,(movement.left||movement.right)&&(e.velocity.x+=e.direction.x*e.speed*r),(movement.up||movement.down)&&(e.velocity.y+=e.direction.y*e.speed*r),(movement.forward||movement.backward)&&(e.velocity.z-=e.direction.z*e.speed*r),n.x+=e.velocity.x*e.position,n.y+=e.velocity.y*e.position,n.z+=e.velocity.z*e.position,i.body.position.x=i.body.position.x+n.x,i.body.position.y=i.body.position.y+n.y,i.body.position.z=i.body.position.z+n.z;var s=i.body.position.x+n.x-i.body.position.x,d=i.body.position.z+n.z-i.body.position.z;a=Math.atan2(s,d);i.model.position.copy(i.body.position);var p=new THREE.Euler(0,a,0,"YXZ"),c=new THREE.Quaternion;c.setFromEuler(p),i.model.quaternion.copy(i.body.quaternion),i.model.quaternion.multiply(c);var y="";return y+="<h3>velocity</h3>",y+="x: "+round(e.velocity.x,0)+"<br>",y+="y: "+round(e.velocity.y,0)+"<br>",y+="z: "+round(e.velocity.z,0)+"<br>",y+="<h3>position</h3>",y+="x: "+round(n.x,0)+"<br>",y+="y: "+round(n.y,0)+"<br>",y+="z: "+round(n.z,0)+"<br>",y+="<h3>body position</h3>",y+="x: "+round(i.body.position.x,0)+"<br>",y+="y: "+round(i.body.position.y,0)+"<br>",y+="z: "+round(i.body.position.z,0)+"<br>",y+="<h3>quaternion</h3>",y+="x: "+round(i.model.quaternion.x,0)+"<br>",y+="y: "+round(i.model.quaternion.y,0)+"<br>",y+="z: "+round(i.model.quaternion.z,0)+"<br>",y+="w: "+round(i.model.quaternion.w,0)+"<br>",y+="<h3>angle</h3>",y+="x: "+s+"<br>",y+="Z: "+d+"<br>",y+=a+"<br>",$("#coords").html(y),e}function add_XYZ_GUI(e,o,t){var i=e.addFolder(t);return add_GUI(i,o,"x"),add_GUI(i,o,"y"),add_GUI(i,o,"z"),i}function updateModel(e,o,t,i,r,n,a,s,d,p,c){a=1/60;var y=s.multiply.speed,h=s.multiply.position,l=s.multiply.rotation,u=(s.character.angle,s.character.position),m=s.character.velocity;p.z=Number(r.forward)-Number(r.backward),p.x=Number(r.right)-Number(r.left),p.normalize(),m.z-=m.z*a,m.x-=m.x*a,m.y-=m.y*a,(r.forward||r.backward)&&(m.z-=p.z*y*a),(r.left||r.right)&&(m.x+=p.x*y*a),m.x=round(m.x),m.y=round(m.y),m.z=round(m.z),m.y<=0&&(m.y=0),TweenLite.to(d,10,{x:m.x,z:m.z,ease:Elastic.easeOut}),d.y=m.y;y=abs(round((m.x+m.y+m.z)/3,0),0);if($("#speed").text(y),u.x+=m.x*h,u.y+=m.y*h,u.z+=m.z*h,u.x=round(u.x),u.y=round(u.y),u.z=round(u.z),r.rotateLeft&&1*l*a,r.rotateRight&&1*l*a,0!=Math.round(m.x)&&0!=Math.round(m.x)){var w=Math.atan2(u.x-t.position.x,u.z-t.position.z),N=-(w+Math.PI)/(2*Math.PI)*360;N=round((N+360)%360,0),u.r=round(w,2),TweenLite.to(t.rotation,2,{y:u.r,ease:Elastic.easeOut,onUpdate:function(){t.rotation.y>Math.PI?t.rotation.y-=2*Math.PI:t.rotation.y<-Math.PI&&(t.rotation.y+=2*Math.PI)}}),TweenLite.to(t.position,2,{x:u.x,y:u.y,z:u.z,ease:Elastic.easeOut}),i.position.x=t.position.x,i.position.y=t.position.y,i.position.z=t.position.z}}function coordinatesBetween(e,o){var t=e.z-o.z,i=o.z-e.z,r=o.x-e.x,n=o.y-e.y;distanceFromTarget=Math.sqrt(Math.pow(r,2)+Math.pow(n,2)+Math.pow(t,2));var a=180*Math.atan2(r,t)/Math.PI;a<0&&(a+=360);var s=180*Math.atan2(r,n)/Math.PI;s<0&&(s+=360),d<0&&(d+=360);var d=180*Math.atan2(t,n)/Math.PI;return{position:{z:Math.round(i,2),x:Math.round(r,2),y:Math.round(n,2)},distance:Math.abs(Math.round(distanceFromTarget,2)),rotation:{xz:Math.round(a,2),xy:Math.round(s,2),zy:Math.round(d,2)}}}function updatePosition(e){e.model.position.copy(e.body.position),e.model.quaternion.copy(e.body.quaternion)}const defaultScene={color:0,fog:3355443,near:.1,far:100,id:"scene"},defaultCamera={type:"perspective",properties:{fov:75,near:.1,far:1e3},position:{x:0,y:0,z:0},target:{x:0,y:0,z:0},id:"scene"},defaultLight={type:"point",scene:"scene",color:16777215,intensity:1,mapSize:2048,near:.5,far:100,position:{x:20,y:20,z:20},target:{x:0,y:0,z:0},guide:!1,shadow:!0},defaultPhysics={gravity:{x:0,y:-9.82,z:0},time:1/30};var defaultPrimitive={size:{width:10,height:10,depth:10,radius:10,segments:10,tubeRadius:1},position:{x:0,y:0,z:0},scale:{x:1,y:1,z:1},rotation:{x:0,y:0,z:0},color:16711680,doubleSided:!1,opacity:1,receive:!0,scene:"scene",shadow:!1,texture:void 0,transparent:!1,visible:!0,wireframe:!1,guide:!1,shape:"box",physics:{mass:1,impulse:{x:0,y:0,z:0},force:{x:0,y:0,z:0},world:"world",dynamic:!0,friction:.3,restitution:.3}},defaultModel={position:{x:0,y:0,z:0},scale:{x:1,y:1,z:1},rotation:{x:0,y:0,z:0},color:16711680,opacity:1,receive:!0,scene:"scene",shadow:!1,texture:"undefined",path:"model.glb",transparent:!1,visible:!0,wireframe:!1,guide:!1,physics:{mass:1,impulse:{x:0,y:0,z:0},force:{x:0,y:0,z:0},world:"world",dynamic:!0,friction:.3,restitution:.3}};